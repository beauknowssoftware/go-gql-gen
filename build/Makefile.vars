PHONY: vars

define display-var
	echo "$1=$($1)"
endef

ifdef ENV
ENV_CONFIG_ARGS := -config $(CURDIR)/config/$(ENV).json
endif

GO111MODULE := off
GOBIN ?= $(CURDIR)/bin
TOOL_FOLDER := tool
PATH := $(CURDIR)/$(TOOL_FOLDER):${GOBIN}:$(PATH)
VENDOR_TOOLS := golang.org/x/tools/cmd/goimports golang.org/x/lint/golint gotest.tools/gotestsum
CICD_GO_PATH := $(HOME)/go/src
PROJECT_NAME := github.com/beauknowssoftware/graphqlgen
CICD_WORKING_PATH := $(CICD_GO_PATH)/$(PROJECT_NAME)
VENDOR_TOOL_NAMES := $(foreach tool,$(VENDOR_TOOLS),$(lastword $(subst /, ,$(tool))))
CMDS := $(filter-out %-lambda,$(patsubst cmd/%/main.go,%,$(wildcard cmd/*/main.go)))
GO_FILES := $(shell find internal cmd -name '*.go')

vars:
	$(call trace,variable values)
	$(call display-var,CICD)
	$(call display-var,TIME)
	$(call display-var,NO_COLOR)
	$(call display-var,GOPATH)
	$(call display-var,GOROOT)
	$(call display-var,ENV)
	$(call display-var,CURDIR)

	$(call display-var,GO111MODULE)
	$(call display-var,GOBIN)
	$(call display-var,TOOL_FOLDER)
	$(call display-var,PATH)
	$(call display-var,VENDOR_TOOLS)
	$(call display-var,CICD_GO_PATH)
	$(call display-var,PROJECT_NAME)
	$(call display-var,CICD_WORKING_PATH)
	$(call display-var,VENDOR_TOOL_NAMES)
	$(call display-var,CMDS)
	$(call display-var,GO_FILES)
